{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","preparedTodo","classNames","TodoList","preparedTodos","map","App","useState","setUserId","getTitle","setTitle","todosFromServer","currentTodos","addTodo","errorWarning","showWarning","todo","usersFromServer","find","action","method","type","value","onChange","event","target","placeholder","length","disabled","onClick","preventDefault","trim","todos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df4e3711.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../react-app-env';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <div className=\"message notification is-primary is-light\">\n      <p data-cy=\"username\">\n        {`Username: ${user?.name}`}\n      </p>\n      <a href={`mailto:${user?.email}`} data-cy=\"email\">\n        {`Registered email: ${user?.email}`}\n      </a>\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { PreparedTodo } from '../../react-app-env';\n\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  preparedTodo: PreparedTodo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ preparedTodo }) => (\n  <>\n    <h3 className=\"todoTitle title is-3\">{preparedTodo.title}</h3>\n    <div\n      className={\n        classNames(\n          'notification',\n          'is-light',\n          {\n            'is-danger': !preparedTodo.completed,\n            completed: preparedTodo.completed,\n          },\n        )\n      }\n      data-cy=\"status\"\n    >\n      {preparedTodo.completed ? 'Completed!' : '...in progress...'}\n    </div>\n    {preparedTodo.user && <UserInfo user={preparedTodo.user} />}\n  </>\n);\n","import React from 'react';\nimport { PreparedTodo } from '../../react-app-env';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  preparedTodos: PreparedTodo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ preparedTodos }) => (\n  <ol className=\"todoList notification is-link is-light\">\n    {preparedTodos.map(preparedTodo => (\n      <li key={preparedTodo.id} className=\"todoItem\">\n        <TodoInfo preparedTodo={preparedTodo} />\n      </li>\n    ))}\n  </ol>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { PreparedTodo } from './react-app-env';\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport const App: React.FC = () => {\n  const [userId, setUserId] = useState(0);\n  const [getTitle, setTitle] = useState('');\n  const [currentTodos, addTodo] = useState([...todosFromServer]);\n  const [errorWarning, showWarning] = useState(false);\n\n  const preparedTodos: PreparedTodo[] = currentTodos.map(todo => ({\n    ...todo,\n    user: usersFromServer.find(user => user.id === todo.userId) || null,\n  }));\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setUserId(+value);\n  };\n\n  const onSubmit = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n\n    if (getTitle.trim().length && userId) {\n      addTodo(todos => ([\n        ...todos,\n        {\n          userId,\n          id: todos[todos.length - 1].id + 1,\n          title: getTitle.trim(),\n          completed: false,\n        },\n      ]));\n\n      setUserId(0);\n      setTitle('');\n      showWarning(false);\n    } else {\n      showWarning(true);\n    }\n  };\n\n  return (\n    <div className=\"App main\">\n      <h1 className=\"title is-2\">Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={getTitle}\n            onChange={handleInput}\n            placeholder=\"Your title expected here\"\n            className=\"input is-success large is-rounded\"\n          />\n          {!getTitle.length && errorWarning && (\n            <p className=\"error\">\n              Please enter a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            name=\"users\"\n            id=\"users\"\n            value={userId}\n            onChange={handleSelect}\n            className=\"select is-rounded is-large\"\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {!userId && errorWarning && (\n            <p className=\"error\">\n              Please choose a user\n            </p>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={onSubmit}\n          className=\"button is-info large\"\n        >\n          Add\n        </button>\n      </form>\n\n      <h1 className=\"title\">User with Todos</h1>\n      <section className=\"sectionList\">\n        <article className=\"sectionTodos\">\n          <TodoList preparedTodos={preparedTodos} />\n        </article>\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}